name: Deploy to EC2

on:
  push:
    branches:
      - main
    paths:
      - 'web/**'  # Only trigger when web folder changes
  workflow_dispatch:  # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        working-directory: ./web
        run: npm ci

      - name: Build Next.js application
        working-directory: ./web
        run: npm run build

      - name: Create deployment package
        working-directory: ./web
        run: |
          mkdir -p deploy
          cp -r .next/standalone/. deploy/
          mkdir -p deploy/.next/static
          cp -r .next/static/. deploy/.next/static/
          cp -r public deploy/public
          
          # Create .env.production
          cat > deploy/.env.production << 'EOF'
          PORT=3001
          POSTGRES_URL="postgres://gift_admin:password123@localhost:5432/gift_orders"
          POSTGRES_URL_NON_POOLING="postgres://gift_admin:password123@localhost:5432/gift_orders"
          NEXT_PUBLIC_API_MOCKING="disabled"
          NODE_ENV="production"
          EOF
          
          # Create tarball
          cd deploy
          tar -czf ../joytree-app.tar.gz .
          cd ..

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          
          # Write SSH key with proper quoting
          cat > ~/.ssh/ec2-key.pem << 'SSHKEY'
          ${{ secrets.EC2_SSH_KEY }}
          SSHKEY
          
          # Set strict permissions
          chmod 600 ~/.ssh/ec2-key.pem
          
          # Verify key format
          echo "Checking SSH key..."
          if ssh-keygen -l -f ~/.ssh/ec2-key.pem; then
            echo "‚úì SSH key format is valid"
          else
            echo "‚úó SSH key format is invalid"
            exit 1
          fi
          
          # Add EC2 host to known_hosts
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts 2>/dev/null

      - name: Upload to EC2
        run: |
          echo "üì§ Uploading build to EC2..."
          scp -i ~/.ssh/ec2-key.pem \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            web/joytree-app.tar.gz \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/
          echo "‚úì Upload complete"

      - name: Deploy on EC2
        run: |
          echo "üöÄ Deploying application on EC2..."
          ssh -i ~/.ssh/ec2-key.pem \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'ENDSSH'
            set -e
            
            echo "üì¶ Extracting new build..."
            cd ~
            rm -rf joytree-app-backup
            mv joytree-app joytree-app-backup 2>/dev/null || true
            mkdir joytree-app
            cd joytree-app
            tar -xzf ~/joytree-app.tar.gz
            
            echo "üîÑ Restarting PM2 process..."
            pm2 restart joytree-gift || PORT=3001 pm2 start server.js --name joytree-gift -i 1
            pm2 save
            
            echo "‚è≥ Waiting for application to start..."
            sleep 5
            
            echo "‚úÖ Verifying deployment..."
            if pm2 list | grep -q "joytree-gift.*online"; then
              echo "‚úÖ Deployment successful!"
              curl -f http://localhost:3001 > /dev/null 2>&1 && echo "‚úÖ Health check passed!" || echo "‚ö†Ô∏è Health check warning"
              
              # Cleanup
              rm -rf ~/joytree-app-backup
              rm -f ~/joytree-app.tar.gz
            else
              echo "‚ùå Deployment failed!"
              pm2 logs joytree-gift --lines 50 --nostream
              
              # Rollback
              echo "üîÑ Rolling back to previous version..."
              cd ~
              rm -rf joytree-app
              mv joytree-app-backup joytree-app 2>/dev/null || true
              pm2 restart joytree-gift
              exit 1
            fi
          ENDSSH

      - name: Clean up
        if: always()
        run: rm -f ~/.ssh/ec2-key.pem

      - name: Deployment notification
        if: success()
        run: |
          echo "üéâ Deployment completed successfully!"
          echo "üåê Application is live at: http://${{ secrets.EC2_HOST }}"